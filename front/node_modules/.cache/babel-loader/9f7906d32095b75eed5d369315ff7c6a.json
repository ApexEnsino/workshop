{"ast":null,"code":"var _jsxFileName = \"D:\\\\Meu Computador\\\\Desktop\\\\Workshop\\\\front\\\\src\\\\index.js\";\n// Importar complementos\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Classe\n\nclass Pagina extends React.Component {\n  // Props e State\n  constructor(props) {\n    super(props);\n\n    this.cadastrar = () => {\n      fetch(\"http://localhost:4000\", {\n        method: 'POST',\n        body: JSON.stringify({\n          'nome': this.state.nome,\n          'idade': this.state.idade\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resposta => resposta.json()).then(resultado => {\n        // Copiar array\n        var vetor = this.state.dados; // Adicionar dados vindos do back-end\n\n        vetor.push(resultado); // Sobrepor dados do array\n\n        this.setState({\n          dados: vetor\n        });\n      });\n    };\n\n    this.excluir = codigo => {\n      fetch(\"http://localhost:4000/\" + codigo, {\n        method: 'DELETE'\n      }).then(res => res.json()).then(resultado => {\n        // Retornar mensagem\n        alert(resultado.mensagem); // Atualizar página\n\n        window.location.reload(false);\n      });\n    };\n\n    this.aoTeclar = e => {\n      let nam = e.target.name;\n      let val = e.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      dados: []\n    };\n  } // Após criar o componente selecionar os dados\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/\", {\n      method: \"GET\"\n    }).then(resposta => resposta.json()).then(resultado => {\n      this.setState({\n        dados: resultado\n      });\n    });\n  } // Método para efetuar o cadastro\n\n\n  // Render\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Nome\",\n      className: \"form-control\",\n      name: \"nome\",\n      onChange: this.aoTeclar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Idade\",\n      className: \"form-control\",\n      name: \"idade\",\n      onChange: this.aoTeclar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Cadastrar\",\n      className: \"btn btn-primary\",\n      onClick: this.cadastrar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Idade\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, this.state.dados.map(obj => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, obj.codigo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, obj.nome), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, obj.idade))))));\n  }\n\n} // Selecionando o id root\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Pagina, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/Meu Computador/Desktop/Workshop/front/src/index.js"],"names":["React","ReactDOM","Pagina","Component","constructor","props","cadastrar","fetch","method","body","JSON","stringify","state","nome","idade","headers","then","resposta","json","resultado","vetor","dados","push","setState","excluir","codigo","res","alert","mensagem","window","location","reload","aoTeclar","e","nam","target","name","val","value","componentDidMount","render","map","obj","document","getElementById"],"mappings":"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","sourcesContent":["// Importar complementos\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Classe\r\nclass Pagina extends React.Component{\r\n\r\n    // Props e State\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            dados : []\r\n        }\r\n\r\n    }\r\n\r\n    // Após criar o componente selecionar os dados\r\n    componentDidMount(){\r\n        fetch(\"http://localhost:4000/\", {method:\"GET\"})\r\n        .then(resposta => resposta.json())\r\n        .then((resultado) => {\r\n            this.setState({\r\n                dados : resultado\r\n            })\r\n        })\r\n    }\r\n\r\n    // Método para efetuar o cadastro\r\n    cadastrar = () => {\r\n        fetch(\"http://localhost:4000\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({'nome' : this.state.nome, 'idade' : this.state.idade}),\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n        .then(resposta => resposta.json())\r\n        .then((resultado) => {\r\n\r\n            // Copiar array\r\n            var vetor = this.state.dados;\r\n\r\n            // Adicionar dados vindos do back-end\r\n            vetor.push(resultado);\r\n\r\n            // Sobrepor dados do array\r\n            this.setState({dados:vetor});\r\n        });\r\n    }\r\n\r\n    // Método para excluir\r\n    excluir = (codigo) => {\r\n      fetch(\"http://localhost:4000/\"+codigo, {method: 'DELETE'})\r\n      .then(res => res.json())\r\n      .then((resultado) => {\r\n          // Retornar mensagem\r\n          alert(resultado.mensagem)\r\n\r\n          // Atualizar página\r\n          window.location.reload(false);\r\n        }\r\n      )\r\n    }\r\n\r\n    // Enviar o que for digitado aos states de nome e idade\r\n    aoTeclar = (e) => {\r\n      let nam = e.target.name;\r\n      let val = e.target.value;\r\n      this.setState({[nam]: val});\r\n    }\r\n\r\n    // Render\r\n    render(){\r\n        return(\r\n\r\n            <div>\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"Nome\" className=\"form-control\" name=\"nome\" onChange={this.aoTeclar}/>\r\n                    <input type=\"number\" placeholder=\"Idade\" className=\"form-control\" name=\"idade\" onChange={this.aoTeclar}/>\r\n                    <input type=\"button\" value=\"Cadastrar\" className=\"btn btn-primary\" onClick={this.cadastrar} />\r\n                </form>\r\n\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Código</th>\r\n                            <th>Nome</th>\r\n                            <th>Idade</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {this.state.dados.map((obj) => (\r\n                            <tr>\r\n                                <td>{obj.codigo}</td>\r\n                                <td>{obj.nome}</td>\r\n                                <td>{obj.idade}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// Selecionando o id root\r\nReactDOM.render(<Pagina />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}